name: ciborg
trigger:
  batch: false
stages:
- stage: main
  displayName: Main
  jobs:
  - job: verify_up_to_date
    displayName: Verify up to date
    pool:
      vmImage: ubuntu-latest
    continueOnError: true
    steps:
    - task: UsePythonVersion@0
      inputs:
        architecture: x64
        versionSpec: '3.7'
    - bash: |-
        python -m pip install --upgrade pip setuptools
        python -m pip install "ciborg==v1+test"
      displayName: Install ciborg
      failOnStderr: true
    - bash: python -m ciborg azure --configuration ciborg.json --output azure-pipelines.yml
      displayName: Generate
      failOnStderr: true
    - bash: '[ -z "$(git status --porcelain)" ]'
      displayName: Verify
      failOnStderr: true
  - job: sdist
    displayName: Build sdist
    pool:
      vmImage: ubuntu-latest
    continueOnError: true
    steps:
    - task: UsePythonVersion@0
      inputs:
        architecture: x64
        versionSpec: '3.7'
    - bash: |-
        python -m pip install --quiet --upgrade pip
        python -m pip install --quiet --upgrade pep517
        python -m pep517.build --source --out-dir dist/ .
      displayName: Build
      failOnStderr: true
    - task: PublishBuildArtifacts@1
      name: publish
      displayName: Publish
      inputs:
        pathToPublish: $(System.DefaultWorkingDirectory)/dist/
        artifactName: dist
  - job: bdist
    displayName: Build pure wheel
    pool:
      vmImage: ubuntu-latest
    continueOnError: true
    steps:
    - task: UsePythonVersion@0
      inputs:
        architecture: x64
        versionSpec: '3.7'
    - bash: |-
        python -m pip install --quiet --upgrade pip
        python -m pip install --quiet --upgrade pep517
        python -m pep517.build --binary --out-dir dist/ .
      displayName: Build
      failOnStderr: true
    - task: PublishBuildArtifacts@1
      name: publish
      displayName: Publish
      inputs:
        pathToPublish: $(System.DefaultWorkingDirectory)/dist/
        artifactName: dist
  - job: tox_linux_py37_sdist
    displayName: Tox - py37
    pool:
      vmImage: ubuntu-latest
    dependsOn:
    - sdist
    continueOnError: true
    steps:
    - task: UsePythonVersion@0
      inputs:
        architecture: x64
        versionSpec: '3.7'
    - task: DownloadBuildArtifacts@0
      name: download
      displayName: Download
      inputs:
        downloadPath: $(System.DefaultWorkingDirectory)/
        artifactName: dist
    - bash: |-
        ls ${PWD}/dist/*
        echo "##vso[task.setvariable variable=DIST_FILE_PATH]$(ls ${PWD}/dist/*.tar.gz)"
      displayName: Select distribution file
      failOnStderr: true
    - bash: |-
        python -m pip install --quiet --upgrade pip setuptools wheel
        python -m pip install tox
        python -m tox --installpkg="${DIST_FILE_PATH}"
      displayName: Tox
      failOnStderr: true
      env:
        DIST_FILE_PATH: $(DIST_FILE_PATH)
        TOXENV: py37
  - job: tox_linux_py36_bdist
    displayName: Tox - py36
    pool:
      vmImage: ubuntu-latest
    dependsOn:
    - bdist
    continueOnError: true
    steps:
    - task: UsePythonVersion@0
      inputs:
        architecture: x64
        versionSpec: '3.6'
    - task: DownloadBuildArtifacts@0
      name: download
      displayName: Download
      inputs:
        downloadPath: $(System.DefaultWorkingDirectory)/
        artifactName: dist
    - bash: |-
        ls ${PWD}/dist/*
        echo "##vso[task.setvariable variable=DIST_FILE_PATH]$(ls ${PWD}/dist/*.whl)"
      displayName: Select distribution file
      failOnStderr: true
    - bash: |-
        python -m pip install --quiet --upgrade pip setuptools wheel
        python -m pip install tox
        python -m tox --installpkg="${DIST_FILE_PATH}"
      displayName: Tox
      failOnStderr: true
      env:
        DIST_FILE_PATH: $(DIST_FILE_PATH)
        TOXENV: py36
